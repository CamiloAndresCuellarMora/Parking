#task 2
from datetime import datetime

def parking_fare(in_, out_):
    in_ = datetime.strptime(in_, "%m-%d-%y %H:%M:%S")
    out_ = datetime.strptime(out_, "%m-%d-%y %H:%M:%S")
    

    # Duration
    duration = out_ - in_

    # Parking type 
    if in_.weekday() < 5 and 5 <= in_.hour < 10 and 14 <= out_.hour < 20:
        parking_type = "Early Bird"
    elif in_.hour >= 16 or (in_.hour == 0 and in_.minute > 0):
        parking_type = "Night"
    elif in_.weekday() >= 5:
        parking_type = "Weekend"
    else:
        parking_type = "Casual"

    # Fare
    fare = 0
    if parking_type == "Casual":
        if duration.total_seconds() / 60 <= 20:
            fare = 3
        elif duration.total_seconds() / 60 <= 60:
            fare = 15
        else:
            fare = 15 + (duration.total_seconds() / 60 - 60) / 30 * 7.50
            fare = min(fare, 55)
    elif parking_type == "Early Bird":
        fare = 15
        if out_.hour > 20:
            additional_duration = out_ - datetime(out_.year, out_.month, out_.day, 20, 0)
            fare += (additional_duration.total_seconds() / 60) / 30 * 7.50
    elif parking_type == "Night" or parking_type == "Weekend":
        if duration.total_seconds() / 60 <= 20:
            fare = 3
        elif duration.total_seconds() / 60 <= 60:
            fare = 15
        else:
            fare = 15
            
    # lost ticket fee
    if in_.year != out_.year or in_.month != out_.month or in_.day != out_.day:
        fare += 75

   
    return fare

def main():
    in_ = input("Enter in-time in this format 08-20-23 22:30:15: ")
    out_ = input("Enter out-time in this format 08-20-23 22:30:15: ")
    if datetime.strptime(in_, "%m-%d-%y %H:%M:%S") > datetime.strptime(out_, "%m-%d-%y %H:%M:%S"):
        print("Wrong date")
    else:
        in_time = datetime.strptime(in_, "%m-%d-%y %H:%M:%S")
        out_time = datetime.strptime(out_, "%m-%d-%y %H:%M:%S")
        fare = parking_fare(in_,out_)
        print("your parking time is:",out_time - in_time)
        print(f"Parking fare: ${round(fare, 2)}")

if __name__ == "__main__":
    main()

